// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file vm/v1/vm.proto (package vm.v1, syntax proto3)
/* eslint-disable */

import type {
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv2";
import {
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file vm/v1/vm.proto.
 */
export const file_vm_v1_vm: GenFile =
  /*@__PURE__*/
  fileDesc(
    "Cg52bS92MS92bS5wcm90bxIFdm0udjEinQEKG0NyZWF0ZVZpcnR1YWxNYWNoaW5lUmVxdWVzdBIOCgZyZWdpb24YASABKAkSDAoEc2l6ZRgCIAEoCRINCgVpbWFnZRgDIAEoCRIQCghzc2hfa2V5cxgEIAMoCRIPCgdiYWNrdXBzGAUgASgIEgwKBGlwdjYYBiABKAgSEgoKbW9uaXRvcmluZxgHIAEoCBIMCgR0YWdzGAggAygJIk4KHENyZWF0ZVZpcnR1YWxNYWNoaW5lUmVzcG9uc2USLgoPdmlydHVhbF9tYWNoaW5lGAEgASgLMhUudm0udjEuVmlydHVhbE1hY2hpbmUiYAoaTGlzdFZpcnR1YWxNYWNoaW5lc1JlcXVlc3QSEQoJcGFnZV9zaXplGAEgASgFEhIKCnBhZ2VfdG9rZW4YAiABKAkSCwoDdGFnGAMgASgJEg4KBnJlZ2lvbhgEIAEoCSJ8ChtMaXN0VmlydHVhbE1hY2hpbmVzUmVzcG9uc2USLwoQdmlydHVhbF9tYWNoaW5lcxgBIAMoCzIVLnZtLnYxLlZpcnR1YWxNYWNoaW5lEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRITCgt0b3RhbF9jb3VudBgDIAEoBSLhAQoOVmlydHVhbE1hY2hpbmUSCgoCaWQYASABKAUSDAoEbmFtZRgCIAEoCRIOCgZtZW1vcnkYAyABKAUSDQoFdmNwdXMYBCABKAUSDAoEZGlzaxgFIAEoBRIOCgZzdGF0dXMYBiABKAkSDgoGcmVnaW9uGAcgASgJEg0KBWltYWdlGAggASgJEgwKBHNpemUYCSABKAkSEgoKaXBfYWRkcmVzcxgKIAEoCRIMCgR0YWdzGAsgAygJEhIKCmNyZWF0ZWRfYXQYDCABKAkSFQoNcHJpY2VfbW9udGhseRgNIAEoATLWAQoVVmlydHVhbE1hY2hpbmVTZXJ2aWNlEl8KFENyZWF0ZVZpcnR1YWxNYWNoaW5lEiIudm0udjEuQ3JlYXRlVmlydHVhbE1hY2hpbmVSZXF1ZXN0GiMudm0udjEuQ3JlYXRlVmlydHVhbE1hY2hpbmVSZXNwb25zZRJcChNMaXN0VmlydHVhbE1hY2hpbmVzEiEudm0udjEuTGlzdFZpcnR1YWxNYWNoaW5lc1JlcXVlc3QaIi52bS52MS5MaXN0VmlydHVhbE1hY2hpbmVzUmVzcG9uc2ViBnByb3RvMw"
  );

/**
 * Request message for creating a Virtual Machine
 *
 * @generated from message vm.v1.CreateVirtualMachineRequest
 */
export type CreateVirtualMachineRequest =
  Message<"vm.v1.CreateVirtualMachineRequest"> & {
    /**
     * The region identifier
     *
     * @generated from field: string region = 1;
     */
    region: string;

    /**
     * The size identifier (required)
     *
     * @generated from field: string size = 2;
     */
    size: string;

    /**
     * The image identifier (required)
     *
     * @generated from field: string image = 3;
     */
    image: string;

    /**
     * SSH key fingerprints to embed in the VM
     *
     * @generated from field: repeated string ssh_keys = 4;
     */
    sshKeys: string[];

    /**
     * Enable automated backups
     *
     * @generated from field: bool backups = 5;
     */
    backups: boolean;

    /**
     * Enable IPv6
     *
     * @generated from field: bool ipv6 = 6;
     */
    ipv6: boolean;

    /**
     * Install monitoring agent
     *
     * @generated from field: bool monitoring = 7;
     */
    monitoring: boolean;

    /**
     * Tags to apply to the VM
     *
     * @generated from field: repeated string tags = 8;
     */
    tags: string[];
  };

/**
 * Describes the message vm.v1.CreateVirtualMachineRequest.
 * Use `create(CreateVirtualMachineRequestSchema)` to create a new message.
 */
export const CreateVirtualMachineRequestSchema: GenMessage<CreateVirtualMachineRequest> =
  /*@__PURE__*/
  messageDesc(file_vm_v1_vm, 0);

/**
 * Response message for creating a Virtual Machine
 *
 * @generated from message vm.v1.CreateVirtualMachineResponse
 */
export type CreateVirtualMachineResponse =
  Message<"vm.v1.CreateVirtualMachineResponse"> & {
    /**
     * @generated from field: vm.v1.VirtualMachine virtual_machine = 1;
     */
    virtualMachine?: VirtualMachine;
  };

/**
 * Describes the message vm.v1.CreateVirtualMachineResponse.
 * Use `create(CreateVirtualMachineResponseSchema)` to create a new message.
 */
export const CreateVirtualMachineResponseSchema: GenMessage<CreateVirtualMachineResponse> =
  /*@__PURE__*/
  messageDesc(file_vm_v1_vm, 1);

/**
 * Request message for listing Virtual Machines
 *
 * @generated from message vm.v1.ListVirtualMachinesRequest
 */
export type ListVirtualMachinesRequest =
  Message<"vm.v1.ListVirtualMachinesRequest"> & {
    /**
     * Maximum number of VMs to return
     *
     * @generated from field: int32 page_size = 1;
     */
    pageSize: number;

    /**
     * Token for pagination
     *
     * @generated from field: string page_token = 2;
     */
    pageToken: string;

    /**
     * Filter by tag
     *
     * @generated from field: string tag = 3;
     */
    tag: string;

    /**
     * Filter by region
     *
     * @generated from field: string region = 4;
     */
    region: string;
  };

/**
 * Describes the message vm.v1.ListVirtualMachinesRequest.
 * Use `create(ListVirtualMachinesRequestSchema)` to create a new message.
 */
export const ListVirtualMachinesRequestSchema: GenMessage<ListVirtualMachinesRequest> =
  /*@__PURE__*/
  messageDesc(file_vm_v1_vm, 2);

/**
 * Response message for listing Virtual Machines
 *
 * @generated from message vm.v1.ListVirtualMachinesResponse
 */
export type ListVirtualMachinesResponse =
  Message<"vm.v1.ListVirtualMachinesResponse"> & {
    /**
     * List of Virtual Machines
     *
     * @generated from field: repeated vm.v1.VirtualMachine virtual_machines = 1;
     */
    virtualMachines: VirtualMachine[];

    /**
     * Token for next page
     *
     * @generated from field: string next_page_token = 2;
     */
    nextPageToken: string;

    /**
     * Total count of VMs
     *
     * @generated from field: int32 total_count = 3;
     */
    totalCount: number;
  };

/**
 * Describes the message vm.v1.ListVirtualMachinesResponse.
 * Use `create(ListVirtualMachinesResponseSchema)` to create a new message.
 */
export const ListVirtualMachinesResponseSchema: GenMessage<ListVirtualMachinesResponse> =
  /*@__PURE__*/
  messageDesc(file_vm_v1_vm, 3);

/**
 * Virtual Machine resource representation
 *
 * @generated from message vm.v1.VirtualMachine
 */
export type VirtualMachine = Message<"vm.v1.VirtualMachine"> & {
  /**
   * Unique identifier
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * VM name
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Memory in MB
   *
   * @generated from field: int32 memory = 3;
   */
  memory: number;

  /**
   * Number of vCPUs
   *
   * @generated from field: int32 vcpus = 4;
   */
  vcpus: number;

  /**
   * Disk size in GB
   *
   * @generated from field: int32 disk = 5;
   */
  disk: number;

  /**
   * Current status
   *
   * @generated from field: string status = 6;
   */
  status: string;

  /**
   * Region
   *
   * @generated from field: string region = 7;
   */
  region: string;

  /**
   * Image
   *
   * @generated from field: string image = 8;
   */
  image: string;

  /**
   * Size
   *
   * @generated from field: string size = 9;
   */
  size: string;

  /**
   * IP address
   *
   * @generated from field: string ip_address = 10;
   */
  ipAddress: string;

  /**
   * Tags applied to the VM
   *
   * @generated from field: repeated string tags = 11;
   */
  tags: string[];

  /**
   * Creation timestamp
   *
   * @generated from field: string created_at = 12;
   */
  createdAt: string;

  /**
   * Monthly price
   *
   * @generated from field: double price_monthly = 13;
   */
  priceMonthly: number;
};

/**
 * Describes the message vm.v1.VirtualMachine.
 * Use `create(VirtualMachineSchema)` to create a new message.
 */
export const VirtualMachineSchema: GenMessage<VirtualMachine> =
  /*@__PURE__*/
  messageDesc(file_vm_v1_vm, 4);

/**
 * VirtualMachineService provides operations for managing Virtual Machines
 *
 * @generated from service vm.v1.VirtualMachineService
 */
export const VirtualMachineService: GenService<{
  /**
   * Creates a new Virtual Machine
   *
   * @generated from rpc vm.v1.VirtualMachineService.CreateVirtualMachine
   */
  createVirtualMachine: {
    methodKind: "unary";
    input: typeof CreateVirtualMachineRequestSchema;
    output: typeof CreateVirtualMachineResponseSchema;
  };
  /**
   * Lists existing Virtual Machines
   *
   * @generated from rpc vm.v1.VirtualMachineService.ListVirtualMachines
   */
  listVirtualMachines: {
    methodKind: "unary";
    input: typeof ListVirtualMachinesRequestSchema;
    output: typeof ListVirtualMachinesResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_vm_v1_vm, 0);
