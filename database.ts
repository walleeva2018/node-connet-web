import type { ConnectRouter } from "@connectrpc/connect";
import { create } from "@bufbuild/protobuf";
import {
  DatabaseService,
  GetCreateOptionsRequestSchema,
  GetCreateOptionsResponseSchema,
  GetRegionsRequestSchema,
  GetRegionsResponseSchema,
  GetPlansRequestSchema,
  GetPlansResponseSchema,
  CreateDatabaseRequestSchema,
  CreateDatabaseResponseSchema,
  ListDatabasesRequestSchema,
  ListDatabasesResponseSchema,
  UpdateDatabaseRequestSchema,
  UpdateDatabaseResponseSchema,
  DeleteDatabaseRequestSchema,
  DeleteDatabaseResponseSchema,
  GetDatabaseResponseSchema,
  DatabaseSchema,
  RegionVPCSchema,
  VPCSchema,
  ResourceCountByTypeSchema,
  PlanListSchema,
  PlanSchema,
  StorageAutoscaleSchema,
  DatabaseType,
  DatabaseLayout,
  SizeCategory,
  type GetCreateOptionsRequest,
  type GetRegionsRequest,
  type GetPlansRequest,
  type CreateDatabaseRequest,
  type ListDatabasesRequest,
  type ListDatabasesResponse,
  type UpdateDatabaseRequest,
  type DeleteDatabaseRequest,
  type Database,
  type Plan,
  type GetDatabaseRequest,
  UserType,
  type GetCreateOptionsResponse,
} from "./gen/database/v1/database_pb.js";
import user from "./user.js";

// In-memory storage for demo purposes
const databases: Database[] = [
    {
    $typeName: "database.v1.Database",
    id: "db-3001",
    name: "analytics_db",
    region: "ap-south1",
    type: DatabaseType.MONGODB,
    version: "5.0",
    size: "medium",
    storageSizeMib: BigInt(2048),
    layout: DatabaseLayout.SINGLE_NODE,
    vpcUuid: "vpc-3001",
    projectUuid: "550e8400-e29b-41d4-a716-446655440003",
    status: "ACTIVE",
    endpoint: "analytics-db.example.com",
    port: 27017,
    createdAt: "2025-05-10T12:00:00Z",
    updatedAt: "2025-09-15T14:20:00Z",
    tags: ["analytics", "test"],
    storageAutoscale: {
      $typeName: "database.v1.StorageAutoscale",
      enabled: true,
      threshold: 80,
      incrementMib: BigInt(8192),
    },
    userType: UserType.ORGANIZATION,
    userUuid: "user-uuid-1",
  },
  
  {
    $typeName: "database.v1.Database",
    id: "db-3001",
    name: "analytics_db",
    region: "ap-south1",
    type: DatabaseType.MONGODB,
    version: "5.0",
    size: "medium",
    storageSizeMib: BigInt(2048),
    layout: DatabaseLayout.SINGLE_NODE,
    vpcUuid: "vpc-3001",
    projectUuid: "550e8400-e29b-41d4-a716-446655440003",
    status: "ACTIVE",
    endpoint: "analytics-db.example.com",
    port: 27017,
    createdAt: "2025-05-10T12:00:00Z",
    updatedAt: "2025-09-15T14:20:00Z",
    tags: ["analytics", "test"],
    storageAutoscale: {
      $typeName: "database.v1.StorageAutoscale",
      enabled: true,
      threshold: 80,
      incrementMib: BigInt(8192),
    },
    userType: UserType.ORGANIZATION,
    userUuid: "org-uuid-2",
  },
  {
    $typeName: "database.v1.Database",
    id: "db-3002",
    name: "backup_db",
    region: "ap-south1",
    type: DatabaseType.MONGODB,
    version: "5.0",
    size: "large",
    storageSizeMib: BigInt(4096),
    layout: DatabaseLayout.SINGLE_NODE,
    vpcUuid: "vpc-3001",
    projectUuid: "550e8400-e29b-41d4-a716-446655440003",
    status: "ACTIVE",
    endpoint: "backup-db.example.com",
    port: 27017,
    createdAt: "2025-06-25T13:00:00Z",
    updatedAt: "2025-09-16T15:40:00Z",
    tags: ["backup", "prod"],
    storageAutoscale: {
      $typeName: "database.v1.StorageAutoscale",
      enabled: true,
      threshold: 80,
      incrementMib: BigInt(8192),
    },
    userType: UserType.ORGANIZATION,
    userUuid: "org-uuid-2",
  },
];

let nextId = 1;

// Mock data based on your provided data structures

const mockPostgresPlans = [
  {
    name: "1-1-8-dd",
    monthlyPrice: 13,
    vCpu: 1,
    ramTotal: 1,
    usableMemory: 1,
    diskSize: 10,
    diskSizeMax: 30,
    excludedLayouts: [
      "multiNode15",
      "multiNode2",
      "multiNode3",
      "multiNode6",
      "multiNode9",
    ],
    sizeCategory: SizeCategory.STANDARD,
    dropletSlugName: "s-1vcpu-1gb",
    enabledRegions: [
      "nyc2",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "13",
    replicaMonthlyPrice: "13",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "1-2-30-dd",
    monthlyPrice: 24,
    vCpu: 1,
    ramTotal: 2,
    usableMemory: 2,
    diskSize: 30,
    diskSizeMax: 60,
    excludedLayouts: ["multiNode15", "multiNode6", "multiNode9"],
    sizeCategory: SizeCategory.STANDARD,
    dropletSlugName: "s-1vcpu-2gb",
    enabledRegions: [
      "nyc2",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "24",
    replicaMonthlyPrice: "24",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "intel-1-1-35-dd",
    monthlyPrice: 16,
    vCpu: 1,
    ramTotal: 1,
    usableMemory: 1,
    diskSize: 20,
    diskSizeMax: 100,
    excludedLayouts: [
      "multiNode15",
      "multiNode2",
      "multiNode3",
      "multiNode6",
      "multiNode9",
    ],
    sizeCategory: SizeCategory.BASIC_PREMIUM_INTEL,
    dropletSlugName: "s-1vcpu-1gb-35gb-intel",
    enabledRegions: [
      "nyc2",
      "atl1",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "16",
    replicaMonthlyPrice: "16",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "amd-1-1-25-dd",
    monthlyPrice: 15,
    vCpu: 1,
    ramTotal: 1,
    usableMemory: 1,
    diskSize: 15,
    diskSizeMax: 75,
    excludedLayouts: [
      "multiNode15",
      "multiNode2",
      "multiNode3",
      "multiNode6",
      "multiNode9",
    ],
    sizeCategory: SizeCategory.BASIC_PREMIUM_AMD,
    dropletSlugName: "s-1vcpu-1gb-amd",
    enabledRegions: [
      "nyc3",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
      "nyc2",
      "atl1",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
    ],
    standbyMonthlyPrice: "15",
    replicaMonthlyPrice: "15",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "amd-1-2-50-dd",
    monthlyPrice: 28,
    vCpu: 1,
    ramTotal: 2,
    usableMemory: 2,
    diskSize: 40,
    diskSizeMax: 200,
    excludedLayouts: ["multiNode15", "multiNode6", "multiNode9"],
    sizeCategory: SizeCategory.BASIC_PREMIUM_AMD,
    dropletSlugName: "s-1vcpu-2gb-amd",
    enabledRegions: [
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "nyc2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
      "atl1",
    ],
    standbyMonthlyPrice: "28",
    replicaMonthlyPrice: "28",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "intel-1-2-70-dd",
    monthlyPrice: 30,
    vCpu: 1,
    ramTotal: 2,
    usableMemory: 2,
    diskSize: 50,
    diskSizeMax: 250,
    excludedLayouts: ["multiNode15", "multiNode6", "multiNode9"],
    sizeCategory: SizeCategory.BASIC_PREMIUM_INTEL,
    dropletSlugName: "s-1vcpu-2gb-70gb-intel",
    enabledRegions: [
      "nyc2",
      "atl1",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "30",
    replicaMonthlyPrice: "30",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "g-2-8-50-dd",
    monthlyPrice: 107,
    vCpu: 2,
    ramTotal: 8,
    usableMemory: 8,
    diskSize: 30,
    diskSizeMax: 150,
    excludedLayouts: ["multiNode15", "multiNode6", "multiNode9"],
    sizeCategory: SizeCategory.GENERAL_PURPOSE,
    dropletSlugName: "gd-2vcpu-8gb",
    enabledRegions: [
      "nyc2",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "107",
    replicaMonthlyPrice: "107",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "so-2-16-450-dd",
    monthlyPrice: 152,
    vCpu: 2,
    ramTotal: 16,
    usableMemory: 16,
    diskSize: 300,
    diskSizeMax: 1500,
    excludedLayouts: ["multiNode15", "multiNode6", "multiNode9"],
    sizeCategory: SizeCategory.STORAGE_OPTIMIZED,
    dropletSlugName: "so1_5-2vcpu-16gb",
    enabledRegions: [
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "nyc2",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "152",
    replicaMonthlyPrice: "152",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "g-4-16-100-dd",
    monthlyPrice: 212,
    vCpu: 4,
    ramTotal: 16,
    usableMemory: 16,
    diskSize: 70,
    diskSizeMax: 350,
    excludedLayouts: ["multiNode15", "multiNode6", "multiNode9"],
    sizeCategory: SizeCategory.GENERAL_PURPOSE,
    dropletSlugName: "gd-4vcpu-16gb",
    enabledRegions: [
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "nyc2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "212",
    replicaMonthlyPrice: "212",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "so-4-32-900-dd",
    monthlyPrice: 302,
    vCpu: 4,
    ramTotal: 32,
    usableMemory: 32,
    diskSize: 600,
    diskSizeMax: 3000,
    excludedLayouts: ["multiNode15", "multiNode6", "multiNode9"],
    sizeCategory: SizeCategory.STORAGE_OPTIMIZED,
    dropletSlugName: "so1_5-4vcpu-32gb",
    enabledRegions: [
      "nyc2",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "302",
    replicaMonthlyPrice: "302",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
];

const mockMongodbPlans = [
  {
    name: "s-1-1-8-dd",
    monthlyPrice: 12,
    vCpu: 1,
    ramTotal: 1,
    usableMemory: 1,
    diskSize: 15,
    diskSizeMax: 25,
    excludedLayouts: ["multiNode2", "multiNode6", "multiNode9", "multiNode15"],
    sizeCategory: SizeCategory.STANDARD,
    dropletSlugName: "s-1vcpu-1gb",
    enabledRegions: [
      "nyc2",
      "nyc1",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
      "nyc3",
    ],
    standbyMonthlyPrice: "12",
    replicaMonthlyPrice: "12",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "s-1-2-30-dd",
    monthlyPrice: 23.2,
    vCpu: 1,
    ramTotal: 2,
    usableMemory: 2,
    diskSize: 34,
    diskSizeMax: 54,
    excludedLayouts: ["multiNode2", "multiNode6", "multiNode9", "multiNode15"],
    sizeCategory: SizeCategory.STANDARD,
    dropletSlugName: "s-1vcpu-2gb",
    enabledRegions: [
      "nyc2",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "23.2",
    replicaMonthlyPrice: "23.2",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "g-2-8-50-dd",
    monthlyPrice: 107,
    vCpu: 2,
    ramTotal: 8,
    usableMemory: 8,
    diskSize: 40,
    diskSizeMax: 200,
    excludedLayouts: ["multiNode2", "multiNode6", "multiNode9", "multiNode15"],
    sizeCategory: SizeCategory.GENERAL_PURPOSE,
    dropletSlugName: "gd-2vcpu-8gb",
    enabledRegions: [
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
      "nyc2",
    ],
    standbyMonthlyPrice: "107",
    replicaMonthlyPrice: "107",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "g-4-16-100-dd",
    monthlyPrice: 212,
    vCpu: 4,
    ramTotal: 16,
    usableMemory: 16,
    diskSize: 90,
    diskSizeMax: 450,
    excludedLayouts: ["multiNode2", "multiNode6", "multiNode9", "multiNode15"],
    sizeCategory: SizeCategory.GENERAL_PURPOSE,
    dropletSlugName: "gd-4vcpu-16gb",
    enabledRegions: [
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
      "nyc2",
    ],
    standbyMonthlyPrice: "212",
    replicaMonthlyPrice: "212",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "so-2-16-450-dd",
    monthlyPrice: 152,
    vCpu: 2,
    ramTotal: 16,
    usableMemory: 16,
    diskSize: 440,
    diskSizeMax: 2200,
    excludedLayouts: ["multiNode2", "multiNode6", "multiNode9", "multiNode15"],
    sizeCategory: SizeCategory.STORAGE_OPTIMIZED,
    dropletSlugName: "so1_5-2vcpu-16gb",
    enabledRegions: [
      "nyc2",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "152",
    replicaMonthlyPrice: "152",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
  {
    name: "so-4-32-900-dd",
    monthlyPrice: 302,
    vCpu: 4,
    ramTotal: 32,
    usableMemory: 32,
    diskSize: 890,
    diskSizeMax: 4450,
    excludedLayouts: ["multiNode2", "multiNode6", "multiNode9", "multiNode15"],
    sizeCategory: SizeCategory.STORAGE_OPTIMIZED,
    dropletSlugName: "so1_5-4vcpu-32gb",
    enabledRegions: [
      "nyc2",
      "ams3",
      "blr1",
      "fra1",
      "lon1",
      "nyc1",
      "nyc3",
      "sfo2",
      "sfo3",
      "sgp1",
      "tor1",
      "syd1",
    ],
    standbyMonthlyPrice: "302",
    replicaMonthlyPrice: "302",
    pricePerGib: "0.215",
    isDeprecated: false,
  },
];

const mockClusterOptions = [
  {
    type: DatabaseType.POSTGRES,
    name: "PostgreSQL",
    description: "Relational database",
    defaultVersion: "17",
    regions: [
      "ams3",
      "nyc1",
      "nyc2",
      "nyc3",
      "sgp1",
      "sfo2",
      "sfo3",
      "tor1",
      "lon1",
      "blr1",
      "fra1",
      "syd1",
      "atl1",
    ],
    versions: ["14", "15", "16", "17"],
    sizes: [
      "1-1-8-dd",
      "1-2-30-dd",
      "intel-1-1-35-dd",
      "amd-1-1-25-dd",
      "amd-1-2-50-dd",
      "intel-1-2-70-dd",
      "g-2-8-50-dd",
      "so-2-16-450-dd",
      "g-4-16-100-dd",
      "so-4-32-900-dd",
    ],
    plans: mockPostgresPlans,
  },
  {
    type: DatabaseType.MONGODB,
    name: "MongoDB",
    description: "NoSQL database",
    defaultVersion: "8.0",
    regions: [
      "syd1",
      "sfo2",
      "fra1",
      "sgp1",
      "nyc1",
      "lon1",
      "tor1",
      "nyc3",
      "sfo3",
      "nyc2",
      "blr1",
      "ams3",
    ],
    versions: ["7.0", "8.0"],
    sizes: [
      "s-1-1-8-dd",
      "s-1-2-30-dd",
      "g-2-8-50-dd",
      "g-4-16-100-dd",
      "so-2-16-450-dd",
      "so-4-32-900-dd",
    ],
    plans: mockMongodbPlans,
  },
];

const mockRegions = [
  {
    region: "ams3",
    name: "Amsterdam",
    vpcs: [
      {
        id: "e274599f-cc6c-429e-8707-2b9a3c131ffa",
        name: "default-ams3",
        description: "",
        region: "ams3",
        ipRange: "10.110.0.0/20",
        isDefault: true,
      },
    ],
  },
  {
    region: "blr1",
    name: "Bangalore",
    vpcs: [
      {
        id: "67fb92fe-e739-4ca7-bfc4-ab15342da9f4",
        name: "default-blr1",
        description: "",
        region: "blr1",
        ipRange: "10.122.0.0/20",
        isDefault: true,
      },
    ],
  },
  {
    region: "nyc1",
    name: "New York 1",
    vpcs: [
      {
        id: "aa629dd4-2bca-402d-8e72-1c84a010adac",
        name: "default-nyc1",
        description: "",
        region: "nyc1",
        ipRange: "10.116.0.0/20",
        isDefault: true,
      },
    ],
  },
  {
    region: "nyc3",
    name: "New York 3",
    vpcs: [
      {
        id: "4084c4c1-582b-4b66-93ed-18c9a2dfe5de",
        name: "default-nyc3",
        description: "",
        region: "nyc3",
        ipRange: "10.108.0.0/20",
        isDefault: true,
      },
    ],
  },
  {
    region: "sfo2",
    name: "San Francisco 2",
    vpcs: [
      {
        id: "6e96d78d-5e26-4c6b-b293-f4e459183f2a",
        name: "default-sfo2",
        description: "",
        region: "sfo2",
        ipRange: "10.120.0.0/20",
        isDefault: true,
      },
    ],
  },
  {
    region: "sfo3",
    name: "San Francisco 3",
    vpcs: [
      {
        id: "31ebceb9-36b5-4cac-9bc0-0cba45b2a7b7",
        name: "default-sfo3",
        description: "",
        region: "sfo3",
        ipRange: "10.124.0.0/20",
        isDefault: true,
      },
    ],
  },
];

function fun(id:string){
    const db = databases.find((d) => d.id === id);
    
    if (db) {
      db.status = "Ready";
      db.updatedAt = new Date().toISOString();
    }
}

export default function (router: ConnectRouter) {
  router.service(DatabaseService, {
    // Get available options for creating databases
    getCreateOptions: async (request: GetCreateOptionsRequest) => {
      const options = mockClusterOptions;

      // Delay for 1 second
      await new Promise((resolve) => setTimeout(resolve, 500));

      return create(GetCreateOptionsResponseSchema, {
        options: options,
      });
    },

    // Get available regions with VPC information
    getRegions: async (request: GetRegionsRequest) => {
      const regionVpcs = mockRegions.map((region) =>
        create(RegionVPCSchema, {
          region: region.region,
          name: region.name,
          vpcs: region.vpcs.map((vpc) =>
            create(VPCSchema, {
              id: vpc.id,
              name: vpc.name,
              description: vpc.description,
              region: vpc.region,
              ipRange: vpc.ipRange,
              isDefault: vpc.isDefault,
            })
          ),
        })
      );

      return create(GetRegionsResponseSchema, {
        regions: regionVpcs,
      });
    },

    // Create a new database cluster
    createDatabase: async (request: CreateDatabaseRequest) => {

  const database: Database = {
    $typeName: "database.v1.Database",
    id: `db-${Date.now()}`,
    name: request.name,
    region: request.region,
    type: request.type,
    version: request.version,
    size: request.size,
    storageSizeMib: request.storageSizeMib,
    layout: request.layout,
    vpcUuid: request.vpcUuid,
    projectUuid: request.projectUuid,
    status: "Provisioning",
    endpoint: `${request.name}.db.ondigitalocean.com`,
    port: request.type === DatabaseType.POSTGRES ? 25060 : 27017,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    tags: request.tags,
    storageAutoscale: create(StorageAutoscaleSchema, {
      enabled: request.storageAutoscaleEnabled,
      threshold: request.storageAutoscaleThreshold,
      incrementMib: request.storageAutoscaleIncrementMib,
    }),
    userType: request.userType,
    userUuid: request.userUuid,
  };

 
  databases.push(database);


  setTimeout(() => {
     fun(database.id)
   
  }, 1000 * 15 );

  // await new Promise((resolve) => setTimeout(resolve, 500));

  return create(CreateDatabaseResponseSchema, {
    database: create(DatabaseSchema, database),
  });
},

  getDatabase: async (request: GetDatabaseRequest) => {
  const database = databases.find((db) => db.id === request.id);

  if (!database) {
    throw new Error(`Database with id ${request.id} not found`);
  }

  return create(GetDatabaseResponseSchema, {
    database: create(DatabaseSchema, database),
  });
},

    // List database clusters
    listDatabases: async (request: ListDatabasesRequest) => {
      let filtered = databases;
      filtered = filtered.filter((db) => db.userUuid === request.userUuid);
      // Filter by project if specified
      if (request.projectUuid) {
        filtered = filtered.filter(
          (db) => db.projectUuid === request.projectUuid
        );
      }
      await new Promise((resolve) => setTimeout(resolve, 500));

      return create(ListDatabasesResponseSchema, {
        databases: filtered,
        totalCount: filtered.length,
      });
    },

    // Update an existing database cluster
    updateDatabase: async (request: UpdateDatabaseRequest) => {
      const database = databases.find((db) => db.id === request.id);
      if (!database) {
        throw new Error(`Database with id ${request.id} not found`);
      }

      // Update fields if provided
      if (request.size) {
        database.size = request.size;
      }
      if (request.storageSizeMib) {
        database.storageSizeMib = request.storageSizeMib;
      }
      if (request.tags) {
        database.tags = request.tags;
      }
      if (request.storageAutoscale) {
        database.storageAutoscale = create(
          StorageAutoscaleSchema,
          request.storageAutoscale
        );
      }

      database.updatedAt = new Date().toISOString();

      return create(UpdateDatabaseResponseSchema, {
        database: create(DatabaseSchema, database),
      });
    },

    // Delete a database cluster
    deleteDatabase: async (request: DeleteDatabaseRequest) => {
      const index = databases.findIndex((db) => db.id === request.id);
      if (index === -1) {
        throw new Error(`Database with id ${request.id} not found`);
      }

      databases.splice(index, 1);

      return create(DeleteDatabaseResponseSchema, {
        message: `Database ${request.id} has been successfully deleted`,
      });
    },
  });
}

// const dbOption = {
//   options: [
//     {
//       default_version: "17",
//       type: "PG",
//       regions: [
//         "ams3",
//         "nyc1",
//         "nyc2",
//         "nyc3",
//         "sgp1",
//         "sfo2",
//         "sfo3",
//         "tor1",
//         "lon1",
//         "blr1",
//         "fra1",
//         "syd1",
//         "atl1",
//       ],
//       versions: ["14", "15", "16", "17"],
//       sizes: [
//         "1-1-8-dd",
//         "1-2-30-dd",
//         "intel-1-1-35-dd",
//         "amd-1-1-25-dd",
//         "amd-1-2-50-dd",
//         "intel-1-2-70-dd",
//         "g-2-8-50-dd",
//         "so-2-16-450-dd",
//         "g-4-16-100-dd",
//         "so-4-32-900-dd",
//       ],
//       __typename: "ClusterOption",
//     },
//     {
//       default_version: "8.0",
//       type: "MONGODB",
//       regions: [
//         "syd1",
//         "sfo2",
//         "fra1",
//         "sgp1",
//         "nyc1",
//         "lon1",
//         "tor1",
//         "nyc3",
//         "sfo3",
//         "nyc2",
//         "blr1",
//         "ams3",
//       ],
//       versions: ["7.0", "8.0"],
//       sizes: [
//         "s-1-1-8-dd",
//         "s-1-2-30-dd",
//         "g-2-8-50-dd",
//         "g-4-16-100-dd",
//         "so-2-16-450-dd",
//         "so-4-32-900-dd",
//       ],
//       __typename: "ClusterOption",
//     },
//   ],
//   __typename: "OptionsResponse",
// };

// const plans = {
//   DBaaSGetPlans: {
//     postgres: {
//       plans: [
//         {
//           name: "1-1-8-dd",
//           monthly_price: 13,
//           v_cpu: 1,
//           ram_total: 1,
//           usable_memory: 1,
//           disk_size: 10,
//           disk_size_max: 30,
//           size_category: "Standard",
//           droplet_slug_name: "s-1vcpu-1gb",
//         },
//         {
//           name: "1-2-30-dd",
//           monthly_price: 24,
//           v_cpu: 1,
//           ram_total: 2,
//           usable_memory: 2,
//           disk_size: 30,
//           disk_size_max: 60,
//           size_category: "Standard",
//           droplet_slug_name: "s-1vcpu-2gb",
//         },
//         {
//           name: "intel-1-1-35-dd",
//           monthly_price: 16,
//           v_cpu: 1,
//           ram_total: 1,
//           usable_memory: 1,
//           disk_size: 20,
//           disk_size_max: 100,
//           size_category: "Basic Premium Intel",
//           droplet_slug_name: "s-1vcpu-1gb-35gb-intel",
//         },
//         {
//           name: "amd-1-1-25-dd",
//           monthly_price: 15,
//           v_cpu: 1,
//           ram_total: 1,
//           usable_memory: 1,
//           disk_size: 15,
//           disk_size_max: 75,
//           size_category: "Basic Premium AMD",
//           droplet_slug_name: "s-1vcpu-1gb-amd",
//         },
//         {
//           name: "amd-1-2-50-dd",
//           monthly_price: 28,
//           v_cpu: 1,
//           ram_total: 2,
//           usable_memory: 2,
//           disk_size: 40,
//           disk_size_max: 200,
//           size_category: "Basic Premium AMD",
//           droplet_slug_name: "s-1vcpu-2gb-amd",
//         },
//         {
//           name: "intel-1-2-70-dd",
//           monthly_price: 30,
//           v_cpu: 1,
//           ram_total: 2,
//           usable_memory: 2,
//           disk_size: 50,
//           disk_size_max: 250,
//           size_category: "Basic Premium Intel",
//           droplet_slug_name: "s-1vcpu-2gb-70gb-intel",
//         },
//         {
//           name: "g-2-8-50-dd",
//           monthly_price: 107,
//           v_cpu: 2,
//           ram_total: 8,
//           usable_memory: 8,
//           disk_size: 30,
//           disk_size_max: 150,
//           size_category: "General Purpose (2x SSD)",
//           droplet_slug_name: "gd-2vcpu-8gb",
//         },
//         {
//           name: "so-2-16-450-dd",
//           monthly_price: 152,
//           v_cpu: 2,
//           ram_total: 16,
//           usable_memory: 16,
//           disk_size: 300,
//           disk_size_max: 1500,
//           size_category: "Storage Optimized",
//           droplet_slug_name: "so1_5-2vcpu-16gb",
//         },
//         {
//           name: "g-4-16-100-dd",
//           monthly_price: 212,
//           v_cpu: 4,
//           ram_total: 16,
//           usable_memory: 16,
//           disk_size: 70,
//           disk_size_max: 350,
//           size_category: "General Purpose (2x SSD)",
//           droplet_slug_name: "gd-4vcpu-16gb",
//         },
//         {
//           name: "so-4-32-900-dd",
//           monthly_price: 302,
//           v_cpu: 4,
//           ram_total: 32,
//           usable_memory: 32,
//           disk_size: 600,
//           disk_size_max: 3000,
//           size_category: "Storage Optimized",
//           droplet_slug_name: "so1_5-4vcpu-32gb",
//         },
//       ],
//       __typename: "PlanList",
//     },
//     mongodb: {
//       plans: [
//         {
//           name: "s-1-1-8-dd",
//           monthly_price: 12,
//           v_cpu: 1,
//           ram_total: 1,
//           usable_memory: 1,
//           disk_size: 15,
//           disk_size_max: 25,
//           excluded_layouts: [
//             "multi_node_2",
//             "multi_node_6",
//             "multi_node_9",
//             "multi_node_15",
//           ],
//           size_category: "Standard",
//           droplet_slug_name: "s-1vcpu-1gb",
//           enabled_regions: [
//             "nyc2",
//             "nyc1",
//             "ams3",
//             "blr1",
//             "fra1",
//             "lon1",
//             "sfo2",
//             "sfo3",
//             "sgp1",
//             "tor1",
//             "syd1",
//             "nyc3",
//           ],
//           standby_monthly_price: "12",
//           replica_monthly_price: "12",
//           price_per_gib: "0.215",
//           is_deprecated: false,
//           __typename: "Plan",
//         },
//         {
//           name: "s-1-2-30-dd",
//           monthly_price: 23.2,
//           v_cpu: 1,
//           ram_total: 2,
//           usable_memory: 2,
//           disk_size: 34,
//           disk_size_max: 54,
//           excluded_layouts: [
//             "multi_node_2",
//             "multi_node_6",
//             "multi_node_9",
//             "multi_node_15",
//           ],
//           size_category: "Standard",
//           droplet_slug_name: "s-1vcpu-2gb",
//           enabled_regions: [
//             "nyc2",
//             "ams3",
//             "blr1",
//             "fra1",
//             "lon1",
//             "nyc1",
//             "nyc3",
//             "sfo2",
//             "sfo3",
//             "sgp1",
//             "tor1",
//             "syd1",
//           ],
//           standby_monthly_price: "23.2",
//           replica_monthly_price: "23.2",
//           price_per_gib: "0.215",
//           is_deprecated: false,
//           __typename: "Plan",
//         },
//         {
//           name: "g-2-8-50-dd",
//           monthly_price: 107,
//           v_cpu: 2,
//           ram_total: 8,
//           usable_memory: 8,
//           disk_size: 40,
//           disk_size_max: 200,
//           excluded_layouts: [
//             "multi_node_2",
//             "multi_node_6",
//             "multi_node_9",
//             "multi_node_15",
//           ],
//           size_category: "General Purpose (2x SSD)",
//           droplet_slug_name: "gd-2vcpu-8gb",
//           enabled_regions: [
//             "ams3",
//             "blr1",
//             "fra1",
//             "lon1",
//             "nyc1",
//             "nyc3",
//             "sfo2",
//             "sfo3",
//             "sgp1",
//             "tor1",
//             "syd1",
//             "nyc2",
//           ],
//           standby_monthly_price: "107",
//           replica_monthly_price: "107",
//           price_per_gib: "0.215",
//           is_deprecated: false,
//           __typename: "Plan",
//         },
//         {
//           name: "g-4-16-100-dd",
//           monthly_price: 212,
//           v_cpu: 4,
//           ram_total: 16,
//           usable_memory: 16,
//           disk_size: 90,
//           disk_size_max: 450,
//           excluded_layouts: [
//             "multi_node_2",
//             "multi_node_6",
//             "multi_node_9",
//             "multi_node_15",
//           ],
//           size_category: "General Purpose (2x SSD)",
//           droplet_slug_name: "gd-4vcpu-16gb",
//           enabled_regions: [
//             "ams3",
//             "blr1",
//             "fra1",
//             "lon1",
//             "nyc1",
//             "nyc3",
//             "sfo2",
//             "sfo3",
//             "sgp1",
//             "tor1",
//             "syd1",
//             "nyc2",
//           ],
//           standby_monthly_price: "212",
//           replica_monthly_price: "212",
//           price_per_gib: "0.215",
//           is_deprecated: false,
//           __typename: "Plan",
//         },
//         {
//           name: "so-2-16-450-dd",
//           monthly_price: 152,
//           v_cpu: 2,
//           ram_total: 16,
//           usable_memory: 16,
//           disk_size: 440,
//           disk_size_max: 2200,
//           excluded_layouts: [
//             "multi_node_2",
//             "multi_node_6",
//             "multi_node_9",
//             "multi_node_15",
//           ],
//           size_category: "Storage Optimized",
//           droplet_slug_name: "so1_5-2vcpu-16gb",
//           enabled_regions: [
//             "nyc2",
//             "ams3",
//             "blr1",
//             "fra1",
//             "lon1",
//             "nyc1",
//             "nyc3",
//             "sfo2",
//             "sfo3",
//             "sgp1",
//             "tor1",
//             "syd1",
//           ],
//           standby_monthly_price: "152",
//           replica_monthly_price: "152",
//           price_per_gib: "0.215",
//           is_deprecated: false,
//           __typename: "Plan",
//         },
//         {
//           name: "so-4-32-900-dd",
//           monthly_price: 302,
//           v_cpu: 4,
//           ram_total: 32,
//           usable_memory: 32,
//           disk_size: 890,
//           disk_size_max: 4450,
//           excluded_layouts: [
//             "multi_node_2",
//             "multi_node_6",
//             "multi_node_9",
//             "multi_node_15",
//           ],
//           size_category: "Storage Optimized",
//           droplet_slug_name: "so1_5-4vcpu-32gb",
//           enabled_regions: [
//             "nyc2",
//             "ams3",
//             "blr1",
//             "fra1",
//             "lon1",
//             "nyc1",
//             "nyc3",
//             "sfo2",
//             "sfo3",
//             "sgp1",
//             "tor1",
//             "syd1",
//           ],
//           standby_monthly_price: "302",
//           replica_monthly_price: "302",
//           price_per_gib: "0.215",
//           is_deprecated: false,
//           __typename: "Plan",
//         },
//       ],
//       __typename: "PlanList",
//     },
//   },
// };

// const regions = [
//   {
//     region: "ams3",
//     vpcs: [
//       {
//         id: "b9954b0a-dc83-11e8-a3da-3cfdfea9f0d8",
//         name: "default-ams3",
//         description: "",
//         region: "ams3",
//         ipRange: "10.133.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "blr1",
//     vpcs: [
//       {
//         id: "710520d7-9886-4a66-8b8a-d88245836853",
//         name: "default-blr1",
//         description: "",
//         region: "blr1",
//         ipRange: "10.122.0.0/20",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "fra1",
//     vpcs: [
//       {
//         id: "a615af33-87fd-4405-af42-bca407a2dcb4",
//         name: "default-fra1",
//         description: "",
//         region: "fra1",
//         ipRange: "10.135.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "lon1",
//     vpcs: [
//       {
//         id: "cce0a99d-dc82-11e8-83ec-3cfdfea9f3f0",
//         name: "default-lon1",
//         description: "",
//         region: "lon1",
//         ipRange: "10.131.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "nyc1",
//     vpcs: [
//       {
//         id: "b33a5db3-dc84-11e8-8650-3cfdfea9f8c8",
//         name: "default-nyc1",
//         description: "",
//         region: "nyc1",
//         ipRange: "10.136.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "nyc2",
//     vpcs: [
//       {
//         id: "6fe468b3-9b4b-4963-8f11-4ebc56a66b13",
//         name: "default-nyc2",
//         description: "",
//         region: "nyc2",
//         ipRange: "10.128.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "nyc3",
//     vpcs: [
//       {
//         id: "95471191-dc84-11e8-80bc-3cfdfea9fba1",
//         name: "default-nyc3",
//         description: "",
//         region: "nyc3",
//         ipRange: "10.132.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: 1,
//             resources: {
//               dbaas: 1,
//               droplet: null,
//               kubernetes: null,
//               loadbalancer: null,
//               __typename: "ResourceCountByType",
//             },
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "sfo2",
//     vpcs: [
//       {
//         id: "529e40e8-dc85-11e8-9f23-3cfdfea9fff1",
//         name: "default-sfo2",
//         description: "",
//         region: "sfo2",
//         ipRange: "10.138.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "sfo3",
//     vpcs: [
//       {
//         id: "cc515d0a-002c-4847-8cca-dedd2e22e125",
//         name: "default-sfo3",
//         description: "",
//         region: "sfo3",
//         ipRange: "10.124.0.0/20",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
//   {
//     region: "sgp1",
//     vpcs: [
//       {
//         id: "2cb3945f-dc83-11e8-beb4-3cfdfea9fb81",
//         name: "default-sgp1",
//         description: "",
//         region: "sgp1",
//         ipRange: "10.130.0.0/16",
//         isDefault: true,
//         meta: {
//           stats: {
//             members: null,
//             resources: null,
//             __typename: "Statistics",
//           },
//           __typename: "VpcMeta",
//         },
//         __typename: "Vpc",
//       },
//     ],
//     __typename: "RegionVPCS",
//   },
// ];
