syntax = "proto3";

package project.v1;

// Project entity
message Project {
  string uuid = 1;
  string owner_uuid = 2;
  int32 owner_id = 3;
  string owner_name = 4;  // Added owner name field
  string name = 5;        // Incremented field numbers
  string description = 6;
  string purpose = 7;
  string environment = 8;
  bool is_default = 9;
  string image_uri = 10;
  string created_at = 11;
  string updated_at = 12;
  // Using google.protobuf.Struct for flexible resources field
  // or you can define a specific Resources message if needed
  optional Resources resources = 13;
}

// Resources message (define based on your actual structure)
message Resources {
  // Add specific resource fields here based on your requirements
  // For now keeping it flexible
  map<string, string> properties = 1;
}

// Request messages
message CreateProjectRequest {
  string name = 1;
  optional string description = 2;
  optional string purpose = 3;
  optional string environment = 4;
  optional bool is_default = 5;
}

message GetProjectRequest {
  string uuid = 1;
}

message UpdateProjectRequest {
  string uuid = 1;
  optional string name = 2;
  optional string description = 3;
  optional string purpose = 4;
  optional string environment = 5;
  optional bool is_default = 6;
}

message DeleteProjectRequest {
  string uuid = 1;
}

message ListProjectsRequest {
  optional int32 page_size = 1;
  optional string page_token = 2;
  optional string owner_uuid = 3;
  optional string environment = 4;
}

// Response messages
message CreateProjectResponse {
  Project project = 1;
}

message GetProjectResponse {
  Project project = 1;
}

message UpdateProjectResponse {
  Project project = 1;
}

message DeleteProjectResponse {
  bool success = 1;
  string message = 2;
}

message ListProjectsResponse {
  repeated Project projects = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

// Service definition
service ProjectService {
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
  rpc GetProject(GetProjectRequest) returns (GetProjectResponse);
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse);
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse);
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse);
}